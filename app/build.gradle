plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"


    dataBinding{
        enabled= true
    }
    defaultConfig {
        configurations.all {
            resolutionStrategy { force 'androidx.core:core-ktx:1.7.0-alpha01' }
        }
        applicationId "com.example.kotlinomnicure"
        minSdkVersion 29
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file('src\\release\\signingKey')
            storePassword 'omnicure@1620'
            keyAlias = 'android'
            keyPassword 'omnicure@1620'
        }
        staging_iam {
            storeFile file('src\\staging\\keystore.jks')
            storePassword 'omnicure'
            keyAlias = 'omnicure'
            keyPassword 'omnicure'
        }
        staging {
            storeFile file('src\\staging\\keystore.jks')
            storePassword 'omnicure'
            keyAlias = 'omnicure'
            keyPassword 'omnicure'
        }
        debug {
            storeFile file('src\\debug\\debug.keystore')
            storePassword 'android'
            keyAlias = 'androiddebugkey'
            keyPassword 'android'
        }
        netccn{
            storeFile file('src\\debug\\debug.keystore')
            storePassword 'android'
            keyAlias = 'androiddebugkey'
            keyPassword 'android'
        }
        netccndev {
            storeFile file('src\\netccndev\\debug.keystore')
            storePassword 'android'
            keyAlias = 'androiddebugkey'
            keyPassword 'android'
        }
        OmnicurenetccnDEV2 {
            storeFile file('src\\OmnicurenetccnDEV2\\debug.keystore')
            storePassword 'android'
            keyAlias = 'androiddebugkey'
            keyPassword 'android'
        }
        OmnicurenetccnDEV3 {
            storeFile file('src\\OmnicurenetccnDEV3\\debug.keystore')
            storePassword 'android'
            keyAlias = 'androiddebugkey'
            keyPassword 'android'
        }


        netccnautotest {
            storeFile file('src\\netccnautotest\\debug.keystore')
            storePassword 'android'
            keyAlias = 'androiddebugkey'
            keyPassword 'android'
        }
        demo {
            storeFile file('src\\debug\\debug.keystore')
            storePassword 'android'
            keyAlias = 'androiddebugkey'
            keyPassword 'android'
        }
        qa {
            storeFile file('src\\debug\\debug.keystore')
            storePassword 'android'
            keyAlias = 'androiddebugkey'
            keyPassword 'android'
        }
        qa_omnicure {
            storeFile file('src\\qa_omnicure\\signingKey')
            storePassword 'omnicure@1620'
            keyAlias = 'android'
            keyPassword 'omnicure@1620'
        }
        omnicurepilot {
            storeFile file('src\\debug\\debug.keystore')
            storePassword 'android'
            keyAlias = 'androiddebugkey'
            keyPassword 'android'
        }
        ext_test {
            storeFile file('src\\ext_test\\keystore.jks')
            storePassword 'omnicure'
            keyAlias = 'omnicure'
            keyPassword 'omnicure'
        }
        exttesting {
            storeFile file('src\\exttesting\\keystore.jks')
            storePassword 'omnicure'
            keyAlias = 'omnicure'
            keyPassword 'omnicure'
        }
        omnicure_test {
            storeFile file('src\\omnicure_test\\debug.keystore')
            storePassword 'android'
            keyAlias = 'androiddebugkey'
            keyPassword 'android'
        }
        netccnsectest {
            storeFile file('src\\netccnSecTest\\debug.keystore')
            storePassword 'android'
            keyAlias = 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        ext_test {
            buildConfigField "String", "SERVER", '"ext_test"'
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.ext_test
        }
        exttesting {
            buildConfigField "String", "SERVER", '"exttesting"'
            minifyEnabled true
            shrinkResources true
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.exttesting
        }
        debug {
            buildConfigField "String", "SERVER", '"test"'
            minifyEnabled false
            shrinkResources false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        netccn {
            buildConfigField "String", "SERVER", '"netccn"'
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        netccndev {
            buildConfigField "String", "SERVER", '"netccndev"'
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        OmnicurenetccnDEV2 {
            buildConfigField "String", "SERVER", '"Omnicure-netccnDEV2"'
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        OmnicurenetccnDEV3 {
            buildConfigField "String", "SERVER", '"Omnicure-netccnDEV3"'
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        netccnautotest {
            buildConfigField "String", "SERVER", '"netccnautotest"'
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        staging_iam {
            buildConfigField "String", "SERVER", '"staging_iam"'
            minifyEnabled false
            shrinkResources false
            debuggable true
            signingConfig signingConfigs.staging_iam
        }
        staging {
            buildConfigField "String", "SERVER", '"test"'
            minifyEnabled false
            shrinkResources false
            debuggable true
            signingConfig signingConfigs.staging
        }
        release {
            buildConfigField "String", "SERVER", '"production"'
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        demo {
            buildConfigField "String", "SERVER", '"demo"'
            signingConfig signingConfigs.demo
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        qa {
            buildConfigField "String", "SERVER", '"qa"'
            signingConfig signingConfigs.qa
            minifyEnabled false
            debuggable true;
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        qa_omnicure {
            buildConfigField "String", "SERVER", '"qa_omnicure"'
            signingConfig signingConfigs.qa_omnicure
            minifyEnabled false
            debuggable true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        omnicurepilot {
            buildConfigField "String", "SERVER", '"omnicurepilot"'
            signingConfig signingConfigs.omnicurepilot
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        omnicure_test {
            buildConfigField "String", "SERVER", '"omnicure_test"'
            minifyEnabled false
            shrinkResources false
            debuggable false
            signingConfig signingConfigs.debug
        }
        netccnSecTest{
            buildConfigField "String", "SERVER", '"netccnsectest"'
            signingConfig signingConfigs.netccnsectest
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
   /* buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }*/
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    def retrofit_version = "2.8.1"
    def coroutines_version = "1.3.5"
    def lifecycle_version = "2.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.google.firebase:firebase-auth:19.2.0'
    implementation 'com.google.firebase:firebase-database:20.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.github.mmin18:realtimeblurview:1.2.1'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    // Retrofit Api
//
//    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
//    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    // Firebase
    implementation platform('com.google.firebase:firebase-bom:25.2.2')

//    implementation 'com.google.firebase:firebase-database'
//    implementation 'com.google.firebase:firebase-storage'
//    implementation 'com.google.firebase:firebase-auth'

    implementation 'com.google.firebase:firebase-auth:20.0.0'
    implementation 'com.google.firebase:firebase-database:19.5.1'
    implementation 'com.google.firebase:firebase-storage:19.2.0'
    implementation 'com.google.firebase:firebase-messaging:21.0.0'

    // Firebase UI
    implementation 'com.firebaseui:firebase-ui-database:6.2.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.+'
    //noinspection GradleCompatible
    implementation 'com.android.support:support-v4:28.+'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-ui:2.0.0'
    //
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:4.5.0"
    //VideoCall Library
    implementation 'io.agora.rtc:full-sdk:3.2.1'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.jayway.android.robotium:robotium-solo:5.6.3'

    implementation 'com.android.support:multidex:1.0.3'
    // or if you want the vanilla version of Truetime:
   // implementation 'com.github.instacart.truetime-android:library:3.4'
    implementation 'com.github.barteksc:android-pdf-viewer:3.2.0-beta.1'
   // implementation 'org.ocpsoft.prettytime:prettytime:5.0.0.Final'

    implementation 'com.github.mmin18:realtimeblurview:1.2.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'commons-net:commons-net:3.6'

    // Dependency for exoplayer
    implementation "com.google.android.exoplayer:exoplayer:2.13.3"
// Core support in exoplayer
    implementation "com.google.android.exoplayer:exoplayer-core:2.13.3"
// Dash support in exoplayer
    implementation "com.google.android.exoplayer:exoplayer-dash:2.13.3"
// HLS support in exoplayer
    implementation "com.google.android.exoplayer:exoplayer-hls:2.13.3"
// Smooth streaming of video in exoplayer
    implementation "com.google.android.exoplayer:exoplayer-smoothstreaming:2.13.3"
// Default ui of exoplayer
    implementation "com.google.android.exoplayer:exoplayer-ui:2.13.3"
    //fp
    implementation 'androidx.biometric:biometric:1.0.0-beta01'

}
